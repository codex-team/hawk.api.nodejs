"""Authentication token"""
scalar Token

"""Interface for public user fields"""
interface BasicUser {
  """User's id"""
  id: ID!

  """User's email"""
  email: String!

  """User's name"""
  name: String

  """User's picture"""
  picture: String
}

"""Represent API for current user"""
type User  implements BasicUser {
  """Current user's id"""
  id: ID!

  """Current user's email"""
  email: String!

  """Current user's name"""
  name: String

  """Current user's picture"""
  picture: String

  """Current user's workspaces"""
  workspaces: [Workspace!]
}

extend type Query {
  """Returns authenticated user data"""
  me: User
}

extend type Mutation {
  """Register user with provided email. Returns auth token if registered"""
  signUp(
    "Registration email"
    email: String!
  ): Token!

  """Login user with provided email and password"""
  login(
    "User email"
    email: String!,

    "User password"
    password: String!
  ): Token!
}
